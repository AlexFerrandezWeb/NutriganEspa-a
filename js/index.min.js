document.addEventListener("DOMContentLoaded", async function() {
    try {
        // Cargar productos desde el JSON
        const res = await fetch("productos.json");
        if (!res.ok) {
            throw new Error(`HTTP error! status: ${res.status}`);
        }
        const productos = await res.json();
        const container = document.getElementById("productos-container");
        
        if (!container) {
            console.error("No se encontró el contenedor de productos");
            return;
        }

        // Crear filas de productos (3 por fila)
        for (let i = 0; i < productos.length; i += 3) {
            const fila = document.createElement("div");
            fila.classList.add("fila");
            
            // Obtener productos para esta fila
            const productosEnFila = productos.slice(i, i + 3);
            
            // Crear elementos para cada producto
            productosEnFila.forEach(producto => {
                const item = document.createElement("a");
                item.classList.add("item");
                item.href = `producto.html?id=${producto.id}`;
                
                // Calcular precio final con IVA
                const precioFinal = (producto.precio * (1 + producto.iva / 100)).toFixed(2);
                
                // Crear imagen con manejo de errores
                const img = new Image();
                img.src = producto.imagen;
                img.alt = producto.nombre;
                img.loading = "lazy";
                img.classList.add("img-item");
                img.onerror = function() {
                    console.error(`Error cargando imagen para ${producto.nombre}`);
                    this.src = "/assets/img-fav.webp"; // Imagen por defecto
                };
                
                item.appendChild(img);
                item.innerHTML += `
                    <p class="p-item">${producto.nombre}</p>
                    <span class="precio">desde ${precioFinal}€</span>
                `;
                
                fila.appendChild(item);
            });
            
            container.appendChild(fila);
        }

        // Actualizar contador del carrito al cargar la página
        actualizarContadorCarrito();
    } catch (error) {
        console.error("Error cargando productos:", error);
        const container = document.getElementById("productos-container");
        if (container) {
            container.innerHTML = `
                <div class="error-message">
                    <p>Lo sentimos, ha ocurrido un error al cargar los productos.</p>
                    <p>Por favor, intente recargar la página.</p>
                </div>
            `;
        }
    }
});

// Función para añadir productos al carrito
function addToCart(nombre, precio, iva, imagen) {
    let carrito = JSON.parse(localStorage.getItem("carrito")) || [];
    const precioFinal = precio * (1 + iva / 100);
    
    const index = carrito.findIndex(item => item.nombre === nombre);
    if (index !== -1) {
        carrito[index].cantidad += 1;
    } else {
        carrito.push({
            nombre: nombre,
            precio: precio,
            precioFinal: precioFinal,
            iva: iva,
            imagen: imagen,
            cantidad: 1
        });
    }
    
    localStorage.setItem("carrito", JSON.stringify(carrito));
    actualizarContadorCarrito();
}

// Función para actualizar el contador del carrito
function actualizarContadorCarrito() {
    const carritoContador = document.getElementById("carrito-contador");
    if (carritoContador) {
        const carrito = JSON.parse(localStorage.getItem("carrito")) || [];
        const totalItems = carrito.reduce((sum, item) => sum + item.cantidad, 0);
        carritoContador.textContent = totalItems;
    }
}